{
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "Glog.AI",
          "organization": "Glog.AI",
          "fullName": "Glog, Making software more secure",
          "version": "1.0.0",
          "semanticVersion": "1.0.0",
          "informationUri": "https://www.glog.ai",
          "rules": [
            {
              "id": "0f8b65e2-4591-3b07-99ef-cf91644b4c5a",
              "name": "resources.rules.missing-image-version",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-image-version"
              },
              "fullDescription": {
                "text": "Images should be tagged with an explicit version to produce deterministic container images."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Images should be tagged with an explicit version to produce deterministic container images.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Images should be tagged with an explicit version to produce deterministic container images.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3006](https://github.com/hadolint/hadolint/wiki/DL3006)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-image-version"
                ]
              }
            },
            {
              "id": "503e33e2-20de-30e7-bbdd-3185b5cf80df",
              "name": "resources.rules.missing-pip-no-cache-dir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-pip-no-cache-dir"
              },
              "fullDescription": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "note"
              },
              "help": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3042](https://github.com/hadolint/hadolint/wiki/DL3042)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-pip-no-cache-dir"
                ]
              }
            },
            {
              "id": "871574a8-cb6c-337d-8aa7-a82d26471049",
              "name": "resources.rules.missing-pip-no-cache-dir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-pip-no-cache-dir"
              },
              "fullDescription": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "note"
              },
              "help": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3042](https://github.com/hadolint/hadolint/wiki/DL3042)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-pip-no-cache-dir"
                ]
              }
            },
            {
              "id": "1296a0e8-c99d-3065-b3e9-3f54de461e51",
              "name": "resources.rules.missing-pip-no-cache-dir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-pip-no-cache-dir"
              },
              "fullDescription": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "note"
              },
              "help": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3042](https://github.com/hadolint/hadolint/wiki/DL3042)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-pip-no-cache-dir"
                ]
              }
            },
            {
              "id": "1dabc387-4989-357a-a71b-75124227f0a1",
              "name": "resources.rules.use-workdir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.use-workdir"
              },
              "fullDescription": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3003](https://github.com/hadolint/hadolint/wiki/DL3003)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.use-workdir"
                ]
              }
            },
            {
              "id": "69438343-1120-39a8-a707-293598df2506",
              "name": "resources.rules.use-workdir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.use-workdir"
              },
              "fullDescription": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3003](https://github.com/hadolint/hadolint/wiki/DL3003)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.use-workdir"
                ]
              }
            },
            {
              "id": "86083dcc-ec96-3464-91ce-8776c32b96eb",
              "name": "dockerfile.security.missing-user.missing-user",
              "shortDescription": {
                "text": "Opengrep Finding: dockerfile.security.missing-user.missing-user"
              },
              "fullDescription": {
                "text": "By not specifying a USER, a program in the container may run as 'root'. This is a security hazard. If an attacker can control a process running as root, they may have control over the container. Ensure that the last USER in a Dockerfile is a USER other than 'root'."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "helpUri": "https://semgrep.dev/r/dockerfile.security.missing-user.missing-user",
              "help": {
                "text": "By not specifying a USER, a program in the container may run as 'root'. This is a security hazard. If an attacker can control a process running as root, they may have control over the container. Ensure that the last USER in a Dockerfile is a USER other than 'root'.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "By not specifying a USER, a program in the container may run as 'root'. This is a security hazard. If an attacker can control a process running as root, they may have control over the container. Ensure that the last USER in a Dockerfile is a USER other than 'root'.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/dockerfile.security.missing-user.missing-user)\n - [https://owasp.org/Top10/A04_2021-Insecure_Design](https://owasp.org/Top10/A04_2021-Insecure_Design)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "dockerfile.security.missing-user.missing-user"
                ]
              }
            },
            {
              "id": "6309c49c-ef6c-3c44-b46f-28b961fed06a",
              "name": "resources.rules.raptor-signed-unsigned-conversion",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.raptor-signed-unsigned-conversion"
              },
              "fullDescription": {
                "text": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://cwe.mitre.org/data/definitions/195](https://cwe.mitre.org/data/definitions/195)\n - [https://cwe.mitre.org/data/definitions/196](https://cwe.mitre.org/data/definitions/196)\n - [https://cwe.mitre.org/data/definitions/194](https://cwe.mitre.org/data/definitions/194)\n - [https://cwe.mitre.org/data/definitions/191](https://cwe.mitre.org/data/definitions/191)\n - [https://cwe.mitre.org/data/definitions/681](https://cwe.mitre.org/data/definitions/681)\n - [https://cwe.mitre.org/data/definitions/789](https://cwe.mitre.org/data/definitions/789)\n - [https://g.co/kgs/PCHQjJ](https://g.co/kgs/PCHQjJ)\n - [https://github.com/struct/mms](https://github.com/struct/mms)\n - [https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf](https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf)\n - [http://www.phrack.org/issues/60/10.html#article](http://www.phrack.org/issues/60/10.html#article)\n - [https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples](https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.raptor-signed-unsigned-conversion"
                ]
              }
            },
            {
              "id": "1c16a626-d707-3b62-818e-6a0be65fd810",
              "name": "python.lang.security.audit.exec-detected.exec-detected",
              "shortDescription": {
                "text": "Opengrep Finding: python.lang.security.audit.exec-detected.exec-detected"
              },
              "fullDescription": {
                "text": "Detected the use of exec(). exec() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "helpUri": "https://semgrep.dev/r/python.lang.security.audit.exec-detected.exec-detected",
              "help": {
                "text": "Detected the use of exec(). exec() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Detected the use of exec(). exec() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/python.lang.security.audit.exec-detected.exec-detected)\n - [https://owasp.org/Top10/A03_2021-Injection](https://owasp.org/Top10/A03_2021-Injection)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "python.lang.security.audit.exec-detected.exec-detected"
                ]
              }
            },
            {
              "id": "15506a67-627a-3487-9439-b44883e1bc59",
              "name": "resources.rules.raptor-signed-unsigned-conversion",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.raptor-signed-unsigned-conversion"
              },
              "fullDescription": {
                "text": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://cwe.mitre.org/data/definitions/195](https://cwe.mitre.org/data/definitions/195)\n - [https://cwe.mitre.org/data/definitions/196](https://cwe.mitre.org/data/definitions/196)\n - [https://cwe.mitre.org/data/definitions/194](https://cwe.mitre.org/data/definitions/194)\n - [https://cwe.mitre.org/data/definitions/191](https://cwe.mitre.org/data/definitions/191)\n - [https://cwe.mitre.org/data/definitions/681](https://cwe.mitre.org/data/definitions/681)\n - [https://cwe.mitre.org/data/definitions/789](https://cwe.mitre.org/data/definitions/789)\n - [https://g.co/kgs/PCHQjJ](https://g.co/kgs/PCHQjJ)\n - [https://github.com/struct/mms](https://github.com/struct/mms)\n - [https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf](https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf)\n - [http://www.phrack.org/issues/60/10.html#article](http://www.phrack.org/issues/60/10.html#article)\n - [https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples](https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.raptor-signed-unsigned-conversion"
                ]
              }
            },
            {
              "id": "2ca478ee-a01e-3eb1-9d3d-1bf6dc31205f",
              "name": "resources.rules.raptor-signed-unsigned-conversion",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.raptor-signed-unsigned-conversion"
              },
              "fullDescription": {
                "text": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://cwe.mitre.org/data/definitions/195](https://cwe.mitre.org/data/definitions/195)\n - [https://cwe.mitre.org/data/definitions/196](https://cwe.mitre.org/data/definitions/196)\n - [https://cwe.mitre.org/data/definitions/194](https://cwe.mitre.org/data/definitions/194)\n - [https://cwe.mitre.org/data/definitions/191](https://cwe.mitre.org/data/definitions/191)\n - [https://cwe.mitre.org/data/definitions/681](https://cwe.mitre.org/data/definitions/681)\n - [https://cwe.mitre.org/data/definitions/789](https://cwe.mitre.org/data/definitions/789)\n - [https://g.co/kgs/PCHQjJ](https://g.co/kgs/PCHQjJ)\n - [https://github.com/struct/mms](https://github.com/struct/mms)\n - [https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf](https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf)\n - [http://www.phrack.org/issues/60/10.html#article](http://www.phrack.org/issues/60/10.html#article)\n - [https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples](https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.raptor-signed-unsigned-conversion"
                ]
              }
            },
            {
              "id": "50b62dd5-0ebe-3d03-9b9d-66203bd644bb",
              "name": "resources.rules.raptor-signed-unsigned-conversion",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.raptor-signed-unsigned-conversion"
              },
              "fullDescription": {
                "text": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://cwe.mitre.org/data/definitions/195](https://cwe.mitre.org/data/definitions/195)\n - [https://cwe.mitre.org/data/definitions/196](https://cwe.mitre.org/data/definitions/196)\n - [https://cwe.mitre.org/data/definitions/194](https://cwe.mitre.org/data/definitions/194)\n - [https://cwe.mitre.org/data/definitions/191](https://cwe.mitre.org/data/definitions/191)\n - [https://cwe.mitre.org/data/definitions/681](https://cwe.mitre.org/data/definitions/681)\n - [https://cwe.mitre.org/data/definitions/789](https://cwe.mitre.org/data/definitions/789)\n - [https://g.co/kgs/PCHQjJ](https://g.co/kgs/PCHQjJ)\n - [https://github.com/struct/mms](https://github.com/struct/mms)\n - [https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf](https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf)\n - [http://www.phrack.org/issues/60/10.html#article](http://www.phrack.org/issues/60/10.html#article)\n - [https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples](https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.raptor-signed-unsigned-conversion"
                ]
              }
            }
          ],
          "language": "en-US",
          "contents": [
            "localizedData",
            "nonLocalizedData"
          ],
          "isComprehensive": false
        }
      },
      "language": "en-US",
      "results": [
        {
          "ruleId": "0f8b65e2-4591-3b07-99ef-cf91644b4c5a",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Images should be tagged with an explicit version to produce deterministic container images."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 10,
                  "snippet": {
                    "text": "FROM rocm/pytorch:rocm6.3_ubuntu24.04_py3.12_pytorch_release_2.4.0"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "bf01890fc9df1e916e7ebd07720a9d3cb5c6d1514174e80408670b71420522fab69cc63a0d17e946abcb98db8fec0baeeab65d83841d9847616aa58ae55ab3ec_0"
          },
          "properties": {}
        },
        {
          "ruleId": "503e33e2-20de-30e7-bbdd-3185b5cf80df",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "This 'pip install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 1,
                  "endLine": 5,
                  "endColumn": 22,
                  "snippet": {
                    "text": "RUN pip install regex"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "2084c79e3db5fa2d346fb4fb7ff0dfd4644e935f3f5840b5987d529c657ea56bb0c573776d48c29194aa313cb5389a93cb42bf721b35dac5b0a398285dcfd342_0"
          },
          "properties": {}
        },
        {
          "ruleId": "1296a0e8-c99d-3065-b3e9-3f54de461e51",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "This 'pip install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 1,
                  "endLine": 6,
                  "endColumn": 21,
                  "snippet": {
                    "text": "RUN pip install nltk"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "d79db4ea59a24a383ddab3498d70f63e72dabeb0575ade6c65490533b2dcb028931807c94d994609257ea0c9e5547d9d68caee974710fa95c652b214125ab750_0"
          },
          "properties": {}
        },
        {
          "ruleId": "871574a8-cb6c-337d-8aa7-a82d26471049",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "This 'pip install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 1,
                  "endLine": 7,
                  "endColumn": 25,
                  "snippet": {
                    "text": "RUN pip install pybind11"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "b2d644dbb92b38a42de4fc0a3dffffec3c37ac107b80fb7dcc74cac579515da65449ca35204de682f6c4bcb4b48c0769485d6dc6cf08538c6ca4e8a53ce17b1c_0"
          },
          "properties": {}
        },
        {
          "ruleId": "1dabc387-4989-357a-a71b-75124227f0a1",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 1,
                  "endLine": 10,
                  "endColumn": 7,
                  "snippet": {
                    "text": "RUN git clone --recurse-submodules -j8 https://github.com/ROCm/megablocks && \\\n    cd megablocks && \\"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "8d367e50e35761b926f24b347a3d048bb3d45a6c6ee8ccc7b4ff393ac2c97727d657193320b7c89a39455a227b43d9d617dd00cab4ff4da6b36962a79493dcf2_0"
          },
          "properties": {}
        },
        {
          "ruleId": "69438343-1120-39a8-a707-293598df2506",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 1,
                  "endLine": 14,
                  "endColumn": 7,
                  "snippet": {
                    "text": "RUN cd megablocks/third_party/Stanford-Megatron-LM && \\"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "8d367e50e35761b926f24b347a3d048bb3d45a6c6ee8ccc7b4ff393ac2c97727d657193320b7c89a39455a227b43d9d617dd00cab4ff4da6b36962a79493dcf2_1"
          },
          "properties": {}
        },
        {
          "ruleId": "86083dcc-ec96-3464-91ce-8776c32b96eb",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "By not specifying a USER, a program in the container may run as 'root'. This is a security hazard. If an attacker can control a process running as root, they may have control over the container. Ensure that the last USER in a Dockerfile is a USER other than 'root'."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 1,
                  "endLine": 18,
                  "endColumn": 18,
                  "snippet": {
                    "text": "CMD [\"/bin/bash\"]"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "09738948e206077e07fa4dd6f4398a710d3b7083e0c7e28f5b7ca47ec86b2d92ed3140d873688e73a1db51526cebde45628b6c46dab29a0519a684409dbc9099_0"
          },
          "properties": {}
        },
        {
          "ruleId": "6309c49c-ef6c-3c44-b46f-28b961fed06a",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "csrc/cumsum.h",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 10,
                  "endLine": 68,
                  "endColumn": 30,
                  "snippet": {
                    "text": "  size_t scratchpad_bytes = 0;"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "2fb2f764e8a02f2b9e1b60c8caa15eaeb518876819b3710fe96585ef915177fe1473e5078c00269c5584530e17fe01173f260accf3d3e3c655440e22163220b3_0"
          },
          "properties": {}
        },
        {
          "ruleId": "1c16a626-d707-3b62-818e-6a0be65fd810",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Detected the use of exec(). exec() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "setup.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 5,
                  "endLine": 35,
                  "endColumn": 51,
                  "snippet": {
                    "text": "    exec(content, version_globals, version_locals)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "b2ee0b627135e0e83e40c14e5dae3bc1852a41df3bb118c01a70a5dc9c248997ce844464bbcd811e40b3ecb1182013ebc2d82e8704d02a5f22efc47131e1948b_0"
          },
          "properties": {}
        },
        {
          "ruleId": "15506a67-627a-3487-9439-b44883e1bc59",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "csrc/replicate.h",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 10,
                  "endLine": 105,
                  "endColumn": 30,
                  "snippet": {
                    "text": "  size_t scratchpad_bytes = 0;"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "46eb010577bfb1d814c0d4a0431dc2dc8b74e8c88aab7670211980ec41200cd524ecdf4a7ef9be79aff24e0f6d8d01cbd92ebe9c4acc18f1ba95c724cef219aa_0"
          },
          "properties": {}
        },
        {
          "ruleId": "2ca478ee-a01e-3eb1-9d3d-1bf6dc31205f",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "csrc/histogram.h",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 10,
                  "endLine": 31,
                  "endColumn": 30,
                  "snippet": {
                    "text": "  size_t scratchpad_bytes = 0;"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "f8589cbc2d03d53b365bfa543c8f8a37a5d61d7123a864c179aa86d8fa3fc8779e5e8ecc3c70f302e9aff4d60a55759ebabe81722e0c56c6110611b1b917a8ce_0"
          },
          "properties": {}
        },
        {
          "ruleId": "50b62dd5-0ebe-3d03-9b9d-66203bd644bb",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "csrc/sort.h",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 10,
                  "endLine": 28,
                  "endColumn": 30,
                  "snippet": {
                    "text": "  size_t scratchpad_bytes = 0;"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "c4a9661b00189547fd9e9d7c060068eaf6f061bcfd5782900b1dd3b6522c549ba89bf788921835a65c9a213ea80391265d22e14dd230995d21a6c25e5842d97f_0"
          },
          "properties": {}
        }
      ],
      "newlineSequences": [
        "\r\n",
        "\n"
      ]
    }
  ]
}